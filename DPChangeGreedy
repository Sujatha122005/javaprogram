import java.util.*;

public class DPChangeGreedy {

	public static int minCoinsDP(int[] coins, int amount) {
        int[] dp = new int[amount + 1];
        Arrays.fill(dp, amount + 1); 
        dp[0] = 0;

        for (int i = 1 ; i <= amount ; i++) {
            for (int coin : coins) {
                if (coin <= i) {
                    dp[i] = Math.min(dp[i], 1 + dp[i - coin]);
                }
            }
        }

        return dp[amount] > amount ? -1 : dp[amount];
    }
	
	public static int minCoinsGreedy(int[] coins, int amount) {
        Arrays.sort(coins); 
        int count = 0;
        for (int i = coins.length - 1; i >= 0 && amount > 0; i--) {
            while (amount >= coins[i]) {
                amount -= coins[i];
                count++;
            }
        }
        return count;
    }
	 
	public static void main(String[] args) {
        int[] coins = {1, 3, 4, 5};
        int amount = 7;

        int dpResult = minCoinsDP(coins, amount);
        int greedyResult = minCoinsGreedy(coins, amount);

        System.out.println(dpResult);         
        System.out.println(greedyResult); 
    }
}
